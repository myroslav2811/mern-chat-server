{"version":3,"sources":["services/localStorageService.js","services/socket.js","services/axios.js","helper.js","Context/Auth/AuthReducer.js","Context/types.js","Context/Auth/index.js","services/auth.js","components/Loading/index.js","components/SignIn/index.js","components/SuccessSignUp/index.js","components/SignUp/index.js","components/PrivateRoute/index.js","services/dialogs.js","Context/Dialogs/DialogsReducer.js","Context/Dialogs/index.js","components/Contact/index.js","components/EmptyComponent/index.js","components/ContactList/index.js","services/debounce.js","services/searchContacts.js","Context/Messages/MessagesReducer.js","Context/Messages/index.js","services/messages.js","components/Message/index.js","components/MessageList/index.js","Context/Socket/index.js","components/Dialog/index.js","components/Main/index.js","App.jsx","serviceWorker.js","index.js"],"names":["LocalStorageService","setToken","tokenObj","localStorage","setItem","accessToken","refreshToken","getAccessToken","getItem","getRefreshToken","clearToken","removeItem","socket","io","query","localStorageService","urlArray","axios","defaults","baseURL","headers","common","interceptors","response","use","error","originalRequest","config","includes","url","status","_retry","Promise","reject","post","then","res","data","close","opts","connect","dateFormat","date","substruct","moment","dayOfYear","diff","AuthReducer","state","action","type","payload","isAuthenticated","isLoading","user","successSignUp","signUpError","initialState","signInError","AuthContext","React","createContext","Auth","children","useReducer","dispatch","useEffect","checkAuth","get","catch","err","Provider","value","resetSuccessSignUp","resetErrors","login","credentials","values","tokens","message","logout","signUp","avatar","Math","random","Loading","size","className","CircularProgress","SignIn","props","useContext","touched","errors","handleChange","handleBlur","handleSubmit","noValidate","onSubmit","TextField","name","label","username","onChange","onBlur","helperText","fullWidth","variant","password","Button","color","to","SignInWithFormik","history","useHistory","push","component","validate","initialValues","style","width","backgroundColor","padding","borderRadius","margin","textAlign","SuccessSignUp","SignUp","setTimeout","passwordRepeat","SignUpWithFormik","length","PrivateRoute","Component","rest","render","getFilteredDialogs","dialogs","pattern","RegExp","filter","item","test","DialogsReducer","dialog","receiver","filtered","items","_id","filteredItems","initialValue","DialogContext","Dialog","getDialogs","updateDialog","chooseDialog","emit","createDialog","id","newDialog","createNewDialog","filterDialogs","Contact","userId","lastMessage","updatedAt","isSearching","classes","classNames","onClick","text","fromNowDuring","format","EmptyComponent","display","justifyContent","alignItems","opacity","fontSize","ContactList","useState","setValue","results","setResults","setIsSearching","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","useDebounce","trim","e","target","autoHide","autoHideTimeout","autoHideDuration","renderTrackHorizontal","map","key","MessagesReducer","messages","MessagesContext","Messages","getMessages","getAllMessages","pushNewMessage","Message","createdAt","author","MessageList","flag","setFlag","scrollbar","useRef","messageListClasses","flexGrow","ref","onUpdate","current","scrollToBottom","SocketContext","Socket","on","preventDefault","placeholder","Main","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.74a1b216.chunk.js","sourcesContent":["const LocalStorageService = (function () {\r\n\r\n    function _setToken(tokenObj) {\r\n        localStorage.setItem('accessToken', tokenObj.accessToken);\r\n        localStorage.setItem('refreshToken', tokenObj.refreshToken);\r\n    }\r\n    function _getAccessToken() {\r\n        return localStorage.getItem('accessToken');\r\n    }\r\n    function _getRefreshToken() {\r\n        return localStorage.getItem('refreshToken');\r\n    }\r\n    function _clearToken() {\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n    }\r\n    return {\r\n        setToken: _setToken,\r\n        getAccessToken: _getAccessToken,\r\n        getRefreshToken: _getRefreshToken,\r\n        clearToken: _clearToken\r\n    }\r\n\r\n})();\r\nexport default LocalStorageService;","import io from 'socket.io-client';\r\nimport localStorageService from './localStorageService';\r\n\r\nexport const socket = io('', { query: 'auth_token=' + localStorageService.getAccessToken() });\r\n\r\nexport const updateAccessToken = () => {\r\n    socket.close();\r\n    socket.io.opts.query = 'auth_token=' + localStorageService.getAccessToken();\r\n    socket.connect();\r\n}","import axios from 'axios';\r\n\r\nimport localStorageService from './localStorageService';\r\nimport { updateAccessToken } from './socket';\r\n\r\nconst urlArray = ['/signin']\r\n\r\naxios.defaults.baseURL = '/api';\r\naxios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorageService.getAccessToken();\r\n\r\naxios.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    (error) => {\r\n        const originalRequest = error.config;\r\n        if (urlArray.includes(originalRequest.url)) {\r\n            return Promise.reject(error);\r\n        }\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            originalRequest._retry = true;\r\n            return axios.post('/refresh-tokens', { refreshToken: localStorageService.getRefreshToken() })\r\n                .then(res => {\r\n                    if (res.status === 201) {\r\n                        localStorageService.setToken(res.data);\r\n\r\n                        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorageService.getAccessToken();\r\n                        updateAccessToken();\r\n\r\n                        return axios(originalRequest);\r\n                    }\r\n                })\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axios;\r\n","import moment from 'moment/moment';\r\n\r\nexport const avatarBackground = () => \"hsl(\" + 360 * Math.random() + ',' +\r\n    (10 + 70 * Math.random()) + '%,' +\r\n    (55 + 10 * Math.random()) + '%)';\r\n\r\nexport const dateFormat = (date) => {\r\n\r\n    const substruct = moment().dayOfYear() - moment(date).dayOfYear();\r\n\r\n    if (moment().diff(date, 'months') > 12) {\r\n        return 'DD MMM YYYY HH:mm';\r\n    }\r\n    if (moment().diff(date, 'days') > 6) {\r\n        return 'DD MMM HH:mm';\r\n    }\r\n    if (substruct > 1) {\r\n        return 'ddd HH:mm';\r\n    }\r\n    if (substruct > 0) {\r\n        return '[Yestarday at] HH:mm';\r\n    }\r\n\r\n    return 'HH:mm'\r\n}","import { SET_IS_AUTHENTICATED, SET_IS_LOADING, SET_USER, SET_SUCCESS_SIGNUP, SET_SIGNUP_ERROR, RESET, SET_SIGNIN_ERROR } from '../types'\r\n\r\nexport const AuthReducer = (state, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case SET_IS_AUTHENTICATED:\r\n            return { ...state, isAuthenticated: payload };\r\n        case SET_IS_LOADING:\r\n            return { ...state, isLoading: payload };\r\n        case SET_USER:\r\n            return { ...state, user: payload };\r\n        case SET_SUCCESS_SIGNUP:\r\n            return { ...state, successSignUp: payload };\r\n        case SET_SIGNUP_ERROR:\r\n            return { ...state, signUpError: payload };\r\n        case RESET:\r\n            return { ...initialState, isLoading: false };\r\n        case SET_SIGNIN_ERROR:\r\n            return { ...state, signInError: payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialState = {\r\n    isAuthenticated: false,\r\n    isLoading: true,\r\n    user: null,\r\n    successSignUp: false,\r\n    signUpError: '',\r\n    signInError: ''\r\n};","export const SET_IS_AUTHENTICATED = 'SET_IS_AUTHENTICATED';\r\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\r\nexport const SET_USER = 'SET_USER';\r\nexport const GET_MESSAGES = 'GET_MESSAGES';\r\nexport const PUSH_NEW_MESSAGE = 'PUSH_NEW_MESSAGE';\r\nexport const SET_DIALOGS = 'SET_DIALOGS';\r\nexport const SET_DIALOG = 'SET_DIALOG';\r\nexport const SET_FILTERED = 'SET_FILTERED';\r\nexport const SET_RECEIVER = 'SET_RECEIVER';\r\nexport const ADD_DIALOG = 'ADD_DIALOG';\r\nexport const SET_SUCCESS_SIGNUP = 'SET_SUCCESS_SIGNUP';\r\nexport const SET_SIGNUP_ERROR = 'SET_SIGNUP_ERROR';\r\nexport const RESET = 'RESET';\r\nexport const SET_SIGNIN_ERROR = 'SET_SIGNING_ERROR';","import React, { useEffect, useReducer } from 'react'\r\nimport { checkIsAuthenticated, authSignUp, authLogin, authLogout } from '../../services/auth.js'\r\nimport { AuthReducer, initialState } from './AuthReducer';\r\nimport { SET_IS_AUTHENTICATED, SET_IS_LOADING, SET_USER, SET_SUCCESS_SIGNUP, SET_SIGNUP_ERROR, RESET, SET_SIGNIN_ERROR } from '../types'\r\n\r\nexport const AuthContext = React.createContext({})\r\n\r\nexport const Auth = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n    const { isAuthenticated, isLoading, user, successSignUp, signUpError, signInError } = state;\r\n\r\n    useEffect(() => {\r\n        checkAuth()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const checkAuth = () => checkIsAuthenticated()\r\n        .then(data => dispatch({ type: SET_USER, payload: data }))\r\n        .then(res => dispatch({ type: SET_IS_AUTHENTICATED, payload: true }))\r\n        .catch(err => dispatch({ type: SET_IS_AUTHENTICATED, payload: false }))\r\n        .then(err => dispatch({ type: SET_IS_LOADING, payload: false }))\r\n\r\n    const login = credentials => authLogin(credentials)\r\n        .then((data) => {\r\n            dispatch({ type: SET_USER, payload: data });\r\n            dispatch({ type: SET_IS_AUTHENTICATED, payload: true });\r\n        })\r\n        .catch(err => {\r\n            dispatch({ type: SET_SIGNIN_ERROR, payload: err.response.data.message });\r\n            dispatch({ type: SET_IS_AUTHENTICATED, payload: false });\r\n        })\r\n\r\n    const logout = () => authLogout()\r\n        .then(res => dispatch({ type: SET_IS_AUTHENTICATED, payload: false }))\r\n        .then(res => dispatch({ type: RESET }))\r\n\r\n    const signUp = credentials => authSignUp(credentials)\r\n        .then(res => dispatch({ type: SET_SUCCESS_SIGNUP, payload: true }))\r\n        .catch(err => dispatch({ type: SET_SIGNUP_ERROR, payload: err.response.data.message }))\r\n\r\n    const resetErrors = () => {\r\n        dispatch({ type: SET_SIGNUP_ERROR, payload: '' });\r\n        dispatch({ type: SET_SIGNIN_ERROR, payload: '' });\r\n    }\r\n\r\n    const resetSuccessSignUp = () => {\r\n        dispatch({ type: SET_SUCCESS_SIGNUP, payload: false });\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, isLoading, user, successSignUp, signUpError, signInError, resetSuccessSignUp, resetErrors, login, logout, signUp, }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import axios from './axios';\r\nimport localStorageService from './localStorageService'\r\nimport { avatarBackground } from '../helper'\r\n\r\nexport const checkIsAuthenticated = () =>\r\n    axios.get('/check-auth')\r\n        .then((res) => res.data)\r\n\r\nexport const authSignUp = (values) =>\r\n    axios.post('/signup', { ...values, avatar: avatarBackground() });\r\n\r\nexport const authLogin = (values) =>\r\n    axios.post('/signin', values)\r\n        .then(res => {\r\n            localStorageService.setToken(res.data.tokens);\r\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + res.data.tokens.accessToken;\r\n            return res.data.user;\r\n        });\r\n\r\nexport const authLogout = () =>\r\n    axios.post('/logout')\r\n        .then(localStorageService.clearToken())","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core/'\r\n\r\nimport './Loading.css'\r\n\r\nexport const Loading = ({ size = '40px' }) => {\r\n    return (\r\n        <div className='spinnerStyle' >\r\n            <CircularProgress size={size} />\r\n        </div>\r\n    );\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Formik } from 'formik';\r\n\r\nimport './SignIn.css';\r\nimport { AuthContext } from '../../Context/Auth';\r\nimport { Loading } from '../Loading';\r\n\r\nconst SignIn = (props) => {\r\n\r\n    const { signInError, resetErrors } = useContext(AuthContext);\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        resetErrors();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='formWrapper'><form noValidate onSubmit={handleSubmit}>\r\n            <h2 className='headStyle'>Sign In</h2>\r\n            <div className='inputStyle'>\r\n                <TextField\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    label=\"Username\"\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={!!errors.username && !!touched.username}\r\n                    helperText={!!errors.username && !!touched.username ? errors.username : null}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n\r\n            <div className='inputStyle'>\r\n                <TextField\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={!!errors.password && !!touched.password}\r\n                    helperText={!!errors.password && !!touched.password ? errors.password : null}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n            <div className='inputStyle'>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\">\r\n                    Sign In\r\n                    </Button>\r\n            </div>\r\n            <p className='invalidDataStyle'>{signInError}</p>\r\n            <div className='inputStyle'>\r\n                <Link to='/signup' className='linkStyle'>Or create new account</Link>\r\n            </div>\r\n        </form>\r\n        </div >\r\n    );\r\n};\r\n\r\n\r\nexport const SignInWithFormik = () => {\r\n\r\n    const { isAuthenticated, isLoading, login } = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n    const validate = values => {\r\n        const errors = {};\r\n\r\n        if (!values.username) {\r\n            errors.username = 'Required';\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const handleSubmit = (values) => {\r\n        login(values);\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        isLoading\r\n            ? <Loading />\r\n            : <Formik component={SignIn}\r\n                validate={validate}\r\n                initialValues={{\r\n                    username: '',\r\n                    password: ''\r\n                }}\r\n                onSubmit={handleSubmit} />\r\n    )\r\n}","import React from 'react';\r\n\r\nconst style = {\r\n    width: '600px',\r\n    backgroundColor: '#fff',\r\n    padding: '50px',\r\n    borderRadius: '5px',\r\n    margin: '100px auto',\r\n    textAlign: 'center',\r\n    color: '#303030'\r\n}\r\n\r\nexport const SuccessSignUp = () => {\r\n    return (\r\n        <div style={style}>\r\n            <h3>Your account succefuly created!</h3>\r\n            <p>You will be automatically redirected to the login page.</p>\r\n        </div>\r\n    );\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Formik } from 'formik';\r\n\r\nimport { SuccessSignUp } from '../SuccessSignUp';\r\nimport './SignUp.css'\r\nimport { AuthContext } from '../../Context/Auth';\r\nimport { Loading } from '../Loading';\r\n\r\nconst SignUp = props => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { successSignUp, signUpError, resetErrors, resetSuccessSignUp } = useContext(AuthContext);\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        resetErrors()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    if (successSignUp) {\r\n        setTimeout(() => {\r\n            history.push('/signin');\r\n            resetSuccessSignUp();\r\n        }, 2000)\r\n\r\n        return <SuccessSignUp />\r\n    }\r\n\r\n    return (\r\n        <div className='formWrapper'>\r\n            <form noValidate onSubmit={handleSubmit}>\r\n                <h2 className='headStyle'>\r\n                    Sign Up\r\n                    </h2>\r\n                <div className='inputStyle'>\r\n                    <TextField\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        label=\"Username\"\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={!!errors.username && !!touched.username}\r\n                        helperText={!!errors.username && !!touched.username ? errors.username : null}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                    />\r\n                </div>\r\n                <div className='inputStyle'>\r\n                    <TextField\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={!!touched.password && !!errors.password}\r\n                        helperText={!!touched.password && !!errors.password ? errors.password : null}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                    />\r\n                </div>\r\n                <div className='inputStyle'>\r\n                    <TextField\r\n                        name=\"passwordRepeat\"\r\n                        type=\"password\"\r\n                        label=\"Repeat password\"\r\n                        value={values.passwordRepeat}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={!!errors.passwordRepeat && !!touched.passwordRepeat}\r\n                        helperText={!!errors.passwordRepeat && !!touched.passwordRepeat ? errors.passwordRepeat : null}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                    />\r\n                </div>\r\n                <div className='inputStyle'>\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\">\r\n                        Sign Up\r\n                    </Button>\r\n                </div>\r\n                <p className='invalidDataStyle'>{!successSignUp && signUpError}</p>\r\n                <div className='inputStyle'>\r\n                    <Link to='/signin' className='linkStyle'>Or sign in</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const SignUpWithFormik = () => {\r\n\r\n    const { isAuthenticated, isLoading, signUp } = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n    const validate = values => {\r\n        const errors = {};\r\n\r\n        if (!values.username) {\r\n            errors.username = 'Required';\r\n        }\r\n\r\n        if (values.username.length > 20) {\r\n            errors.username = 'username should contain no more than 20 characters'\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        } else if (values.password.length < 6) {\r\n            errors.password = 'password should contain at least 6 characters';\r\n        }\r\n\r\n        if (!values.passwordRepeat) {\r\n            errors.passwordRepeat = 'Required';\r\n        } else if (values.passwordRepeat !== values.password) {\r\n            errors.passwordRepeat = 'Passwords do not match';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const handleSubmit = (values) => {\r\n        signUp(values);\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        isLoading\r\n            ? <Loading />\r\n            : <Formik component={SignUp}\r\n                validate={validate}\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                    passwordRepeat: ''\r\n                }}\r\n                onSubmit={handleSubmit} />\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../Context/Auth'\r\nimport { Loading } from '../Loading'\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const { isAuthenticated, isLoading } = useContext(AuthContext)\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            !isLoading\r\n                ?\r\n                (\r\n                    isAuthenticated\r\n                        ?\r\n                        <Component {...props} />\r\n                        :\r\n                        <Redirect to={'/signin'} />\r\n                )\r\n                :\r\n                <Loading />\r\n        )} />\r\n    );\r\n};","import axios from './axios';\r\nimport { socket } from './socket';\r\n\r\nexport const getAllDialogs = () => {\r\n    return axios.get('/dialogs')\r\n        .then(res => res.data);\r\n}\r\n\r\nexport const createNewDialog = (id, dialog, dialogs, filtered) => {\r\n    if (dialog)\r\n        socket.emit('leave', dialog._id);\r\n    return axios.post('/create-dialog', { id })\r\n        .then(res => {\r\n            const newDialog = res.data;\r\n            const items = dialogs.filter(item => item._id !== newDialog._id);\r\n            const filteredItems = filtered.filter(item => item._id !== newDialog._id);\r\n            socket.emit('join', newDialog._id);\r\n            return [newDialog, [newDialog, ...items], [newDialog, ...filteredItems]];\r\n        })\r\n}\r\n\r\nexport const getFilteredDialogs = (value, dialogs) => {\r\n    const pattern = new RegExp(value, 'i');\r\n    return dialogs.filter(item => pattern.test(item.to.username))\r\n}\r\n","import { SET_DIALOGS, SET_DIALOG, SET_RECEIVER, SET_FILTERED, SET_IS_LOADING, ADD_DIALOG } from '../types'\r\n\r\nexport const DialogsReducer = (state, action) => {\r\n\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_DIALOGS:\r\n            return { ...state, dialogs: payload };\r\n        case SET_DIALOG:\r\n            return { ...state, dialog: payload };\r\n        case SET_RECEIVER:\r\n            return { ...state, receiver: payload };\r\n        case SET_FILTERED:\r\n            return { ...state, filtered: payload };\r\n        case SET_IS_LOADING:\r\n            return { ...state, isLoading: payload };\r\n        case ADD_DIALOG:\r\n            const items = state.dialogs.filter(item => item._id !== payload._id);\r\n            const filteredItems = state.filtered.filter(item => item._id !== payload._id);\r\n            return { ...state, dialogs: [payload, ...items], filtered: [payload, ...filteredItems] };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialValue = {\r\n    dialogs: [],\r\n    dialog: null,\r\n    receiver: null,\r\n    filtered: [],\r\n    isLoading: true\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport { getAllDialogs, createNewDialog, getFilteredDialogs } from '../../services/dialogs';\r\nimport { DialogsReducer, initialValue } from './DialogsReducer';\r\nimport { socket } from '../../services/socket';\r\nimport { SET_DIALOGS, SET_FILTERED, SET_DIALOG, SET_RECEIVER, SET_IS_LOADING, ADD_DIALOG } from '../types';\r\n\r\nexport const DialogContext = createContext();\r\n\r\nexport const Dialog = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(DialogsReducer, initialValue);\r\n    const { dialogs, filtered, dialog, receiver, isLoading } = state\r\n\r\n    const getDialogs = () => {\r\n        dispatch({ type: SET_IS_LOADING, payload: true });\r\n        getAllDialogs()\r\n            .then(dialogs => {\r\n                dispatch({ type: SET_DIALOGS, payload: dialogs });\r\n                dispatch({ type: SET_FILTERED, payload: dialogs });\r\n            })\r\n            .then(res => dispatch({ type: SET_IS_LOADING, payload: false }))\r\n            .catch(err => dispatch({ type: SET_IS_LOADING, payload: false }))\r\n    }\r\n\r\n    const chooseDialog = (item) => {\r\n        if (dialog) {\r\n            socket.emit('leave', dialog._id);\r\n        }\r\n        dispatch({ type: SET_DIALOG, payload: item });\r\n        dispatch({ type: SET_RECEIVER, payload: item.to });\r\n        socket.emit('join', item._id);\r\n    }\r\n\r\n    const filterDialogs = (value) => {\r\n        dispatch({ type: SET_FILTERED, payload: getFilteredDialogs(value, dialogs) });\r\n    }\r\n\r\n    const createDialog = (id) => {\r\n        createNewDialog(id, dialog, dialogs, filtered)\r\n            .then(([newDialog, items, filteredItems]) => {\r\n                dispatch({ type: SET_DIALOGS, payload: items });\r\n                dispatch({ type: SET_FILTERED, payload: filteredItems });\r\n                dispatch({ type: SET_DIALOG, payload: newDialog });\r\n                dispatch({ type: SET_RECEIVER, payload: newDialog.to }); \r\n            })\r\n    }\r\n\r\n    const updateDialog = (dialog) => {\r\n        dispatch({ type: ADD_DIALOG, payload: dialog });\r\n    }\r\n\r\n    return (\r\n        <DialogContext.Provider value={{ getDialogs, updateDialog, chooseDialog, createDialog, dialogs, dialog, filtered, filterDialogs, receiver, isLoading }}>\r\n            {children}\r\n        </DialogContext.Provider>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport Moment from 'react-moment';\r\nimport classNames from 'classnames';\r\n\r\nimport './Contact.css';\r\nimport { DialogContext } from '../../Context/Dialogs';\r\nimport { dateFormat } from '../../helper';\r\n\r\nexport const Contact = ({ item, userId, username, lastMessage, updatedAt, isSearching, avatar }) => {\r\n\r\n    const { createDialog, chooseDialog, dialog } = useContext(DialogContext);\r\n\r\n    const handleChoose = () => {\r\n        chooseDialog(item);\r\n    }\r\n    const handleCreate = () => {\r\n        createDialog(userId)\r\n    }\r\n\r\n    const classes = classNames('contact', {\r\n        'selectedContact': !isSearching && dialog && dialog._id === item._id\r\n    })\r\n\r\n    return (\r\n        <div className={classes} onClick={isSearching ? handleCreate : handleChoose} >\r\n            <div className='contactAvatar' >\r\n                <p className='contactAvatar' style={{ backgroundColor: avatar }}>{username[0]}</p>\r\n            </div>\r\n            <div className='contactContent'>\r\n                {isSearching\r\n                    ? <p className='contactUsername'>{username}</p>\r\n                    : <><p className='contactUsername'>{username}</p>\r\n                        <p className='lastMessage'>{lastMessage ? lastMessage.text : 'No messages...'}</p>\r\n                        <p className='contactDate'><Moment date={updatedAt} fromNowDuring={300000} format={dateFormat(updatedAt)} /></p>\r\n                    </>}\r\n            </div>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const EmptyComponent = ({ text }) => {\r\n\r\n    const style = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '0 auto',\r\n        opacity: '0.6',\r\n        fontSize: '20px',\r\n        padding: '30px 20px',\r\n        textAlign: 'center'\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            {text}\r\n        </div>\r\n    )\r\n};","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './ContactList.css';\r\nimport { Contact } from '../Contact'\r\nimport { DialogContext } from '../../Context/Dialogs';\r\nimport { Loading } from '../Loading';\r\nimport { EmptyComponent } from '../EmptyComponent';\r\nimport { useDebounce } from '../../services/debounce';\r\nimport { searchContacts } from '../../services/searchContacts'\r\nimport { AuthContext } from '../../Context/Auth';\r\n\r\nexport const ContactList = () => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const [results, setResults] = useState(null);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const { getDialogs, filtered, filterDialogs, isLoading } = useContext(DialogContext);\r\n    const { user, logout } = useContext(AuthContext);\r\n    const debouncedSearchTerm = useDebounce(value, 500);\r\n\r\n    useEffect(() => {\r\n        getDialogs();\r\n        // eslint-disable-next-line\r\n    }, [user])\r\n\r\n    useEffect(\r\n        () => {\r\n            if (debouncedSearchTerm && value.trim()) {\r\n                setIsSearching(true);\r\n                searchContacts(debouncedSearchTerm).then(results => {\r\n                    setIsSearching(false);\r\n                    setResults(results);\r\n                });\r\n            } else {\r\n                setResults(null);\r\n            }\r\n        },\r\n        // eslint-disable-next-line\r\n        [debouncedSearchTerm]\r\n    );\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value)\r\n        filterDialogs(e.target.value.trim());\r\n    }\r\n\r\n    return (\r\n        <div className='contactList'>\r\n            <div className='headerListContainer'>\r\n                <div className='greeting' >\r\n                    <h3>{user ? user.username : null}</h3>\r\n                    <Button onClick={logout}>Log out</Button>\r\n                </div>\r\n                <div className='searchPanel'>\r\n                    <TextField type=\"text\"\r\n                        label=\"Search\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        variant=\"outlined\" />\r\n                </div>\r\n            </div>\r\n            <div className='scrollbarContainer'>\r\n                {isLoading\r\n                    ? <Loading />\r\n                    : <Scrollbars autoHide\r\n                        autoHideTimeout={1000}\r\n                        autoHideDuration={200}\r\n                        renderTrackHorizontal={props => <div {...props} style={{ display: 'none' }} />}>\r\n                        <div>\r\n                            <p className=\"listHeader\">\r\n                                Dialogs\r\n                                </p>\r\n                            {filtered.length\r\n                                ? filtered.map(item => <Contact updatedAt={item.updatedAt}\r\n                                    username={item.to.username}\r\n                                    id={item._id}\r\n                                    lastMessage={item.lastMessage}\r\n                                    key={item._id}\r\n                                    item={item}\r\n                                    avatar={item.to.avatar} />)\r\n                                : <EmptyComponent text='There are no contacts. Find user using the field above and start messaging' />}\r\n                        </div>\r\n                        {results\r\n                            ? <div>\r\n                                <p className=\"listHeader\">\r\n                                    Global search result\r\n                                </p>\r\n                                {isSearching\r\n                                    ? <Loading />\r\n                                    : results.length\r\n                                        ? results.map(item => <Contact username={item.username} userId={item._id} avatar={item.avatar} isSearching={true} key={item._id} />)\r\n                                        : <EmptyComponent text='There are no contacts' />\r\n                                }\r\n                            </div>\r\n                            : null}\r\n                    </Scrollbars>}\r\n            </div>\r\n        </div >\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\n\r\nexport const useDebounce = (value, delay) => {\r\n\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n        // eslint-disable-next-line\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import axios from './axios';\r\n\r\nexport const searchContacts = (username) => {\r\n    return axios.post('/search-contacts', { username })\r\n        .then(res => res.data)\r\n};","import { GET_MESSAGES, PUSH_NEW_MESSAGE, SET_IS_LOADING } from '../types'\r\n\r\nexport const MessagesReducer = (state, action) => {\r\n\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_MESSAGES:\r\n            return { ...state, messages: payload };\r\n        case PUSH_NEW_MESSAGE:\r\n            return { ...state, messages: [...state.messages, payload] };\r\n        case SET_IS_LOADING:\r\n            return { ...state, isLoading: payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialValue = {\r\n    messages: [],\r\n    isLoading: false\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport { getAllMessages } from '../../services/messages';\r\nimport { MessagesReducer, initialValue } from './MessagesReducer';\r\nimport { GET_MESSAGES, PUSH_NEW_MESSAGE, SET_IS_LOADING } from '../types'\r\n\r\nexport const MessagesContext = createContext();\r\n\r\nexport const Messages = ({ children }) => {\r\n    const [state, dispatch] = useReducer(MessagesReducer, initialValue);\r\n    const { messages, isLoading } = state;\r\n\r\n    const getMessages = (id) => {\r\n        dispatch({ type: SET_IS_LOADING, payload: true });\r\n        getAllMessages(id)\r\n            .then(items => {\r\n                dispatch({ type: GET_MESSAGES, payload: items });\r\n                dispatch({ type: SET_IS_LOADING, payload: false });\r\n            })\r\n            .catch(() => {\r\n                dispatch({ type: SET_IS_LOADING, payload: false });\r\n            })\r\n    }\r\n\r\n    const pushNewMessage = (message) => {\r\n        dispatch({ type: PUSH_NEW_MESSAGE, payload: message });\r\n    }\r\n\r\n\r\n    return (\r\n        <MessagesContext.Provider value={{ messages, isLoading, getMessages, pushNewMessage }}>\r\n            {children}\r\n        </MessagesContext.Provider>\r\n    );\r\n}","import axios from './axios';\r\n\r\nexport const getAllMessages = (id) => {\r\n    return axios.get(`/messages/${id}/`)\r\n        .then(res => res.data)\r\n}","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../Context/Auth'\r\nimport Moment from 'react-moment';\r\nimport { dateFormat } from '../../helper';\r\nimport classNames from 'classnames';\r\n\r\nimport './Message.css'\r\n\r\nexport const Message = ({ text, createdAt, author }) => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    const classes = classNames('message', {\r\n        'myMessage': user && user._id === author,\r\n    })\r\n\r\n    return (\r\n        <p className={classes} >\r\n            <span className='messageText'>{text}</span>\r\n            <span className='messageDate'><Moment date={createdAt} format={dateFormat(createdAt)} /></span>\r\n        </p >\r\n    )\r\n}","import React, { useContext, useRef, useEffect, useState } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport classNames from 'classnames';\r\n\r\nimport { MessagesContext } from '../../Context/Messages';\r\nimport { DialogContext } from '../../Context/Dialogs'\r\nimport { EmptyComponent } from '../EmptyComponent';\r\nimport { Loading } from '../Loading';\r\nimport { Message } from '../Message';\r\nimport './MessageList.css'\r\n\r\nexport const MessageList = () => {\r\n\r\n    const { messages, isLoading, getMessages } = useContext(MessagesContext);\r\n    const { dialog } = useContext(DialogContext);\r\n    const [flag, setFlag] = useState(true)\r\n\r\n    const scrollbar = useRef()\r\n\r\n    useEffect(() => {\r\n        setFlag(true);\r\n    }, [messages])\r\n\r\n    useEffect(() => {\r\n        if (dialog) {\r\n            getMessages(dialog._id);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dialog])\r\n\r\n    const handleUpdate = (e) => {\r\n        if (flag) {\r\n            scrollbar.current.scrollToBottom();\r\n            setFlag(false);\r\n        }\r\n    }\r\n\r\n    const messageListClasses = classNames('messagesContainer', { 'emptyContainer': !messages.length });\r\n\r\n    return (\r\n        isLoading\r\n            ? <div style={{ flexGrow: '1' }}>\r\n                <Loading />\r\n            </div>\r\n            : <Scrollbars\r\n                style={{ display: 'flex' }}\r\n                autoHide\r\n                autoHideTimeout={1000}\r\n                autoHideDuration={200}\r\n                ref={scrollbar}\r\n                onUpdate={handleUpdate}\r\n                renderTrackHorizontal={props => <div {...props} style={{ display: 'none' }}\r\n                />}>\r\n                <div className={messageListClasses}>\r\n                    {messages.length\r\n                        ? messages.map(item => <Message key={item._id}\r\n                            text={item.text}\r\n                            author={item.author}\r\n                            createdAt={item.createdAt} />)\r\n                        : <EmptyComponent text='There are no messages yet' />}\r\n                </div>\r\n            </Scrollbars>\r\n    );\r\n}","import React, { createContext, useContext, useEffect } from 'react';\r\nimport { socket } from '../../services/socket';\r\nimport { MessagesContext } from '../Messages'\r\nimport { DialogContext } from '../Dialogs'\r\n\r\nexport const SocketContext = createContext();\r\n\r\nexport const Socket = ({ children }) => {\r\n\r\n    const { pushNewMessage } = useContext(MessagesContext)\r\n    const { updateDialog } = useContext(DialogContext)\r\n\r\n    useEffect(() => {\r\n        socket.on('updateDialog', updateDialog);\r\n        socket.on('newMessage', pushNewMessage);\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <SocketContext.Provider value={{ socket }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendRounded from '@material-ui/icons/SendRounded'\r\n\r\nimport { MessageList } from '../MessageList';\r\nimport { DialogContext } from '../../Context/Dialogs';\r\nimport { AuthContext } from '../../Context/Auth';\r\nimport { SocketContext } from '../../Context/Socket';\r\nimport './Dialog.css'\r\nimport { EmptyComponent } from '../EmptyComponent';\r\n\r\nexport const Dialog = () => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const { dialog, receiver } = useContext(DialogContext);\r\n    const { user } = useContext(AuthContext);\r\n    const { socket } = useContext(SocketContext)\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (value.trim()) {\r\n            const message = {\r\n                dialog: dialog._id,\r\n                text: value.trim(),\r\n                author: user._id,\r\n                to: receiver._id\r\n            }\r\n            socket.emit('createMessage', message)\r\n        }\r\n        setValue('');\r\n    }\r\n\r\n    return (\r\n        dialog\r\n            ? <div className='dialog'>\r\n                <div className='dialogHeader'>\r\n                    <p>{receiver && receiver.username}</p>\r\n                </div>\r\n                <MessageList />\r\n                <div className='dialogInput'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextField type=\"text\"\r\n                            value={value}\r\n                            placeholder='Write message here...'\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            variant=\"outlined\" />\r\n                        <Button type='submit'>\r\n                            <SendRounded fontSize='large' color='primary' />\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            : <EmptyComponent text='Choose dialog to start messaging' />\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './Main.css';\r\nimport { ContactList } from '../ContactList';\r\nimport { Dialog } from '../Dialog'\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div className='container'>\r\n            <ContactList />\r\n            <Dialog />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import io from 'socket.io-client';\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport { SignInWithFormik } from './components/SignIn';\r\nimport { SignUpWithFormik } from './components/SignUp';\r\nimport { PrivateRoute } from './components/PrivateRoute';\r\nimport { Main } from './components/Main'\r\nimport { Dialog } from './Context/Dialogs';\r\nimport { Messages } from './Context/Messages';\r\nimport { Auth } from './Context/Auth';\r\nimport { Socket } from './Context/Socket';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Auth>\r\n            <Dialog>\r\n                <Messages>\r\n                    <Socket>\r\n                        <Route component={SignInWithFormik} path=\"/signin\" exact />\r\n                        <Route component={SignUpWithFormik} path=\"/signup\" exact />\r\n                        <PrivateRoute component={Main} path=\"/\" exact />\r\n                    </Socket>\r\n                </Messages>\r\n            </Dialog>\r\n        </Auth>\r\n    )\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}